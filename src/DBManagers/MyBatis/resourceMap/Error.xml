<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Error">

	<select id="getList">
			SELECT
				e.id,
				e.error_code,
				e.id_error_level,
				e.id_error_type,
				e.id_device_group,
				e.id_error_state,
				e.`status`,
				ed.`message`,
				ed.description,
				ed.solutions,
				eld.`name` AS error_level_name,
				etd.`name` AS error_type_name,
				est.`name` AS error_state_name,
				dg.`name` AS device_group_name
			FROM
				error e
				LEFT JOIN error_detail ed ON ed.id_error = e.id AND ed.id_language = #{id_language}
				
				LEFT JOIN error_level el ON el.id = e.id_error_level
				LEFT JOIN error_level_detail eld ON eld.id_error_level = el.id AND eld.id_language = #{id_language}
				
				LEFT JOIN error_type et ON et.id = e.id_error_type 
				LEFT JOIN error_type_detail etd ON etd.id_error_type = et.id AND etd.id_language = #{id_language}
				
				LEFT JOIN error_state es ON es.id = e.id_error_state 
				LEFT JOIN error_state_detail est ON est.id_error_state = es.id AND est.id_language = #{id_language}
		
				LEFT JOIN device_group dg ON dg.id = e.id_device_group
			WHERE
				e.`status` IN (0,1)
		
			<if test="message != null">
				AND  (
					ed.`message` LIKE CONCAT('%',#{message},'%')
				)
			</if>

			<if test="id != null">
				AND  (
					e.`id` = #{id}
				)
			</if>
		GROUP BY e.id
		<choose>
			<when test="sort_column != null and order_by != null">
				ORDER BY ${sort_column} ${order_by}
			</when>
			<otherwise>
				ORDER BY e.id DESC
			</otherwise>
		</choose>

	
		<if test="is_paging == 1">
			LIMIT ${offset}, ${limit}
		</if>
	</select>


	<select id="getSize">
		SELECT
			count(e.id) totalRow
		FROM `error` AS e
		LEFT JOIN error_detail ed ON e.id = ed.id_error AND ed.id_language = #{id_language}
		WHERE  e.`status` IN(0,1) 
		<if test="message != null">
			AND  (
				ed.`message` LIKE CONCAT('%',#{message},'%')
			)
		</if>

		<if test="id != null">
			AND  (
				e.`id` = #{id}
			)
		</if>
	</select>

	<insert id="insertError" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `error`(
			`id_error_level`,
			`id_error_type`,
			`id_device_group`,
			`id_error_state`,
			`status`,
			`error_code`,
			`created_date`,
			`created_by`
		)VALUES(
			#{id_error_level},
			#{id_error_type},
			#{id_device_group},
			#{id_error_state},
			#{status},
			#{error_code},
			NOW(),
			#{created_by}
		);
	</insert>




	<insert id="insertErrorDetail" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `error_detail` 
		(
			`id_error`, 
			`id_language`, 
			`message`,
			`description`,
			`solutions`
		)
		VALUES
		<foreach collection="dataDetail" item="item" index="index" separator=",">
				(
					#{item.id_error}, 
					#{item.id_language},
					#{item.message}, 
					#{item.description},
					#{item.solutions}
				)
		</foreach>
	</insert>

	

	<update id="updateStatus">
		UPDATE `error` 
			SET status = #{status}
			WHERE id = #{id}
	</update>

	<select id="getDetail">
		SELECT
			p.`id`,
			p.id_error_level,
			p.id_error_type,
			p.id_device_group,
			p.id_error_state,
			p.error_code,
			p.`status`
		FROM `error` p
		WHERE p.id = #{id};

		SELECT
			pd.id_error,
			pd.`id_language`,
			pd.`message`,
			pd.`description`,
			pd.solutions,
			l.iso_code,
			l.is_default
		FROM error_detail pd
		LEFT JOIN `language` l ON l.id = pd.id_language
		WHERE pd.id_error = #{id} GROUP BY l.id ORDER BY l.is_default DESC;
	</select>


	<delete id="deleteErrorDetail">
		DELETE FROM `error_detail`
		WHERE id_error = #{id}
	</delete>

	

	<update id="updateError">
		UPDATE `error`
		SET
			id_error_level = #{id_error_level},
			id_error_type = #{id_error_type},
			id_device_group = #{id_device_group},
			id_error_state = #{id_error_state},
			status = #{status},
			error_code = #{error_code},
			updated_date = NOW(),
			updated_by = #{updated_by}
		WHERE id = #{id}
	</update>


	<update id="delete">
		UPDATE `error`
		SET
			status = #{status},
			updated_date = NOW(),
			updated_by = #{updated_by}
		WHERE
			id = #{id}
	</update>

</mapper>
