<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Plant">

	<select id="getDetail">
		SELECT
				p.id,
				p.hash_id,
				p.thumbnail,
				p.address,
				p.lat,
				p.lng,
				p.installed_power,
				DATE_FORMAT(p.commisioning_date, '%d/%m/%Y') AS commisioning_date,
				DATE_FORMAT(p.last_updated, '%d/%m/%Y') AS last_updated,
				DATE_FORMAT(p.installed_date, '%d/%m/%Y') AS installed_date,
				YEAR(NOW()) - YEAR(p.installed_date) AS total_year,
				pd.`name`,
				pd.site_name,
				pgd.`name` AS project_group_name,
				IFNULL(t.config_revenue,0) AS config_revenue
			FROM
				project p
				LEFT JOIN project_detail pd ON pd.id_project = p.id 
				AND pd.id_language = #{id_language}
				LEFT JOIN project_group pg ON pg.id = p.id_project_group
				LEFT JOIN project_group_detail pgd ON pgd.id_project_group = pg.id AND pgd.id_language = #{id_language}
				
				LEFT JOIN emloyee_project_map epm ON epm.id_project = p.id 

				LEFT JOIN(
					SELECT pc.id_project, pc.config_revenue FROM project_config pc WHERE NOW() <![CDATA[>=]]> pc.start_date AND NOW() <![CDATA[<=]]> pc.end_date AND pc.`status` = 1 GROUP BY pc.id_project
				)t ON t.id_project = p.id
				
			WHERE p.`status` = 1 AND pg.`status` = 1 AND epm.id_employee = #{id_employee} AND p.hash_id = #{hash_id} LIMIT 1;

	</select>

	
	<select id="getTotalInverter">
		SELECT
			COUNT(d.id) AS totalInverter
		FROM
			device d
			LEFT JOIN project p ON p.id = d.id_project 
		WHERE
			p.hash_id = #{hash_id} AND d.`status` = 1 
			AND p.`status` = 1 
			AND d.id_device_type IN(1)
			AND d.is_virtual = 1

	</select>


	<select id="getGroupDeviceByProjectId">
		SELECT
			dg.id,
			dg.`name`,
			dg.table_name 
		FROM
			device d
			LEFT JOIN device_group dg ON dg.id = d.id_device_group 
		WHERE
			d.id_project = #{id_project}
			AND d.`status` = 1 
			AND dg.`status` = 1 
			AND d.is_virtual = 1
		GROUP BY
			dg.id
			
		UNION ALL

		SELECT
					dg.id,
					dg.`name`,
					dg.table_name 
				FROM
					project_map_device_virtual pm 
					LEFT JOIN device d ON d.id = pm.id_device
					LEFT JOIN device_group dg ON dg.id = d.id_device_group 
				WHERE
					pm.id_project = #{id_project}
					AND d.`status` = 1 
					AND dg.`status` = 1 
					AND d.is_virtual = 1
				GROUP BY
					dg.id
	</select>


	<select id="getDataDeviceEnergy">
		<if test="table_name == 'model_inverter_ABB_PVS100'">
			SELECT
				d.id_project,
				SUM(t.today_activeEnergy) AS today_activeEnergy,
				SUM(t.lifetime) AS lifetime,
				SUM(g.power_now) AS power_now,
				SUM(g.dc_power) AS dc_power,
				IFNULL(SUM(g.deviceOn),0) AS totalInverterOn
			FROM
				device d 
				LEFT JOIN (
					SELECT
						dv.time,
						dv.id_device,
						(MAX( dv.activeEnergy ) ) - (MIN( dv.activeEnergy )) AS today_activeEnergy,
						MAX(dv.activeEnergy) AS lifetime
					FROM
						model_inverter_ABB_PVS100 dv 
						LEFT JOIN device d ON d.id = dv.id_device
						WHERE dv.activeEnergy > 0 
						AND d.is_virtual = 1
						AND d.id_project = #{id_project}
						AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
						GROUP BY dv.id_device
				)t ON d.id = t.id_device


				LEFT JOIN (
					SELECT
						m.id_device,
						m.activePower AS power_now,
						m.dcPower AS dc_power,
						IF(m.activePower > 0 AND m.activePower IS NOT NULL , 1, 0) AS deviceOn
					FROM
						model_inverter_ABB_PVS100 m
						LEFT JOIN device d ON d.id = m.id_device AND d.is_virtual = 1
						INNER JOIN (
							SELECT
								dv.id_device,
								MAX( dv.time ) AS time 
							FROM
								model_inverter_ABB_PVS100 dv 
								LEFT JOIN device d ON d.id = dv.id_device
								WHERE d.id_project = #{id_project}
								AND d.is_virtual = 1
								AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
							GROUP BY
							dv.id_device 
						) b ON b.time = m.time
						GROUP BY m.id_device
				)g ON d.id = g.id_device
			WHERE
				d.id_project = #{id_project}
				AND d.is_virtual = 1
				AND d.id_device_group = #{id_device_group}
				LIMIT 1;
		</if>

		<if test="table_name == 'model_inverter_SMA_SHP75'">
			SELECT
				d.id_project,
				SUM(t.today_activeEnergy) AS today_activeEnergy,
				SUM(t.lifetime) AS lifetime,
				SUM(g.power_now) AS power_now,
				SUM(g.dc_power) AS dc_power,
				IFNULL(SUM(g.deviceOn),0) AS totalInverterOn
			FROM
				device d 
				LEFT JOIN (
					SELECT
						dv.time,
						dv.id_device,
						(MAX( dv.activeEnergy ) ) - (MIN( dv.activeEnergy )) AS today_activeEnergy,
						MAX(dv.activeEnergy) AS lifetime
					FROM
						model_inverter_SMA_SHP75 dv 
						LEFT JOIN device d ON d.id = dv.id_device
						WHERE dv.activeEnergy > 0 
						AND d.is_virtual = 1
						AND d.id_project = #{id_project}
						AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
						GROUP BY dv.id_device
				)t ON d.id = t.id_device

				LEFT JOIN (
					SELECT
						m.id_device,
						m.activePower AS power_now,
						m.dcPower AS dc_power,
						IF(m.activePower > 0 AND m.activePower IS NOT NULL , 1, 0) AS deviceOn
					FROM
						model_inverter_SMA_SHP75 m
						LEFT JOIN device d ON d.id = m.id_device AND d.is_virtual = 1
						INNER JOIN (
							SELECT
								dv.id_device,
								MAX( dv.time ) AS time 
							FROM
								model_inverter_SMA_SHP75 dv 
								LEFT JOIN device d ON d.id = dv.id_device
								WHERE d.id_project = #{id_project}
								AND d.is_virtual = 1
								AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
							GROUP BY
							dv.id_device 
						) b ON b.time = m.time
						GROUP BY m.id_device
				)g ON d.id = g.id_device

			WHERE
				d.id_project = #{id_project}
				AND d.is_virtual = 1
				AND d.id_device_group = #{id_device_group}
				LIMIT 1;
		</if>


		<if test="table_name == 'model_inverter_SMA_STP50'">
			SELECT
				d.id_project,
				SUM(t.today_activeEnergy) AS today_activeEnergy,
				SUM(t.lifetime) AS lifetime,
				SUM(g.power_now) AS power_now,
				SUM(g.dc_power) AS dc_power,
				IFNULL(SUM(g.deviceOn),0) AS totalInverterOn
			FROM
				device d 
				LEFT JOIN (
					SELECT
						dv.time,
						dv.id_device,
						(MAX( dv.activeEnergy ) ) - (MIN( dv.activeEnergy )) AS today_activeEnergy,
						MAX(dv.activeEnergy) AS lifetime
					FROM
						model_inverter_SMA_STP50 dv 
						LEFT JOIN device d ON d.id = dv.id_device
						WHERE dv.activeEnergy > 0 
						AND d.is_virtual = 1
						AND d.id_project = #{id_project}
						AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
						GROUP BY dv.id_device
				)t ON d.id = t.id_device

				LEFT JOIN (
					SELECT
						m.id_device,
						m.activePower AS power_now,
						m.dcPower AS dc_power,
						IF(m.activePower > 0 AND m.activePower IS NOT NULL , 1, 0) AS deviceOn
					FROM
						model_inverter_SMA_STP50 m
						LEFT JOIN device d ON d.id = m.id_device AND d.is_virtual = 1
						INNER JOIN (
							SELECT
								dv.id_device,
								MAX( dv.time ) AS time 
							FROM
								model_inverter_SMA_STP50 dv 
								LEFT JOIN device d ON d.id = dv.id_device
								WHERE d.id_project = #{id_project}
								AND d.is_virtual = 1
								AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
							GROUP BY
							dv.id_device 
						) b ON b.time = m.time
						GROUP BY m.id_device
				)g ON d.id = g.id_device

			WHERE
				d.id_project = #{id_project}
				AND d.id_device_group = #{id_device_group}
				AND d.is_virtual = 1
				LIMIT 1;
		</if>


		<if test="table_name == 'model_inverter_SMA_STP110'">
			SELECT
				d.id_project,
				SUM(t.today_activeEnergy) AS today_activeEnergy,
				SUM(t.lifetime) AS lifetime,
				SUM(g.power_now) AS power_now,
				SUM(g.dc_power) AS dc_power,
				IFNULL(SUM(g.deviceOn),0) AS totalInverterOn
			FROM
				device d 
				LEFT JOIN (
					SELECT
						dv.time,
						dv.id_device,
						(MAX( dv.activeEnergy ) ) - (MIN( dv.activeEnergy )) AS today_activeEnergy,
						MAX(dv.activeEnergy) AS lifetime
					FROM
						model_inverter_SMA_STP110 dv 
						LEFT JOIN device d ON d.id = dv.id_device
						WHERE dv.activeEnergy > 0 
						AND d.is_virtual = 1
						AND d.id_project = #{id_project}
						AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
						GROUP BY dv.id_device
				)t ON d.id = t.id_device

				LEFT JOIN (
					SELECT
						m.id_device,
						m.activePower AS power_now,
						m.dcPower AS dc_power,
						IF(m.activePower > 0 AND m.activePower IS NOT NULL , 1, 0) AS deviceOn
					FROM
						model_inverter_SMA_STP110 m
						LEFT JOIN device d ON d.id = m.id_device AND d.is_virtual = 1
						INNER JOIN (
							SELECT
								dv.id_device,
								MAX( dv.time ) AS time 
							FROM
								model_inverter_SMA_STP110 dv 
								LEFT JOIN device d ON d.id = dv.id_device
								WHERE d.id_project = #{id_project}
								AND d.is_virtual = 1
								AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
							GROUP BY
							dv.id_device 
						) b ON b.time = m.time
						GROUP BY m.id_device
				)g ON d.id = g.id_device

			WHERE
				d.id_project = #{id_project}
				AND d.id_device_group = #{id_device_group}
				AND d.is_virtual = 1
				LIMIT 1;
		</if>

		
	</select>


	<select id="getDataDeviceIrradiance">
		SELECT
			dv.id_device,
			d.id_project,
			dv.time,
			IFNULL(dv.cellTemp, 0 ) AS cellTemp,
			IFNULL(dv.irradiancePoA, 0 ) AS irradiancePoA,
			IFNULL(dv.panelTemp, 0 ) AS panelTemp

		FROM
			device d
			LEFT JOIN model_sensor_IMT_SiRS485 dv ON d.id = dv.id_device
			LEFT JOIN (
			SELECT
				dv.id_device,
				MAX( dv.time ) AS max_time 
			FROM
				model_sensor_IMT_SiRS485 dv 
			GROUP BY
				dv.id_device 
			) t ON dv.time = t.max_time 
			AND dv.id_device = t.id_device 
		WHERE
			d.id_project = #{id_project}
			AND d.id_device_group = #{id_device_group}
			AND d.is_virtual = 1 
			AND d.`status` = 1 
		GROUP BY
			d.id 
			
			UNION ALL
		SELECT
			dv.id_device,
			pm.id_project,
			dv.time,
			IFNULL(dv.cellTemp, 0 ) AS cellTemp,
			IFNULL(dv.irradiancePoA, 0 ) AS irradiancePoA,
			IFNULL(dv.panelTemp, 0 ) AS panelTemp
		FROM
			project_map_device_virtual pm
			LEFT JOIN device d ON d.id = pm.id_device
			LEFT JOIN model_sensor_IMT_SiRS485 dv ON dv.id_device = pm.id_device
			LEFT JOIN (
			SELECT
				dv.id_device,
				MAX( dv.time ) AS max_time 
			FROM
				model_sensor_IMT_SiRS485 dv 
			GROUP BY
				dv.id_device 
			) t ON dv.time = t.max_time 
			AND dv.id_device = t.id_device 
		WHERE
			pm.id_project = #{id_project}
			AND d.id_device_group = #{id_device_group}
			AND d.is_virtual = 1 
			AND d.`status` = 1 
		GROUP BY
			d.id
	</select>


	<select id="getmeterConsumption">
		SELECT
			t.id_project,
			IFNULL(ROUND((SUM( t.activePower ) / 1000), 1), 0) AS activePower 
		FROM
			(
			SELECT
				dv.id_device,
				d.id_project,
				dv.time,
				IFNULL(dv.activePower, 0) AS activePower
			FROM
				device d
				LEFT JOIN model_emeter_Vinasino_VSE3T5 dv ON d.id = dv.id_device
				LEFT JOIN (
				SELECT
					dv.id_device,
					MAX( dv.time ) AS max_time 
				FROM
					model_emeter_Vinasino_VSE3T5 dv 
				GROUP BY
					dv.id_device 
				) t ON dv.time = t.max_time 
				AND dv.id_device = t.id_device 
			WHERE
				d.id_project = #{id_project}
				AND d.id_device_group = #{id_device_group}
				AND d.is_virtual = 1 
				AND d.`status` = 1 
				AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
			GROUP BY
			d.id 
			)t
	</select>


	<select id="getDataDeviceAmbientEmperature">
		SELECT
			d.id,
			d.`name`,
			IFNULL(t.ambientTemp, 0) AS ambientTemp
		FROM
			device d
			LEFT JOIN (
				SELECT
					dv.time,
					MAX(FROM_UNIXTIME(dv.time)) AS max_time,
					dv.id_device, 
					dv.ambientTemp 
				FROM model_sensor_IMT_TaRS485 dv
				WHERE 
				FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
				
				GROUP BY dv.id_device 
			)t ON t.id_device = d.id
		WHERE
			d.id_project = #{id_project}
			AND d.id_device_group = #{id_device_group}
			GROUP BY d.id
		UNION ALL
		SELECT
					d.id,
					d.`name`,
					IFNULL( t.ambientTemp, 0 ) AS ambientTemp
				FROM
					project_map_device_virtual pm
					LEFT JOIN device d ON pm.id_device = d.id
					LEFT JOIN (
						SELECT
							dv.time,
							MAX(FROM_UNIXTIME(dv.time)) AS max_time,
							dv.id_device AS id_device,
							dv.ambientTemp
							
						FROM
							model_sensor_IMT_TaRS485 dv 
						WHERE FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( NOW(), '%d/%m/%Y')
							GROUP BY dv.id_device
					) t ON t.id_device = d.id 
				WHERE
					pm.id_project = #{id_project}
					AND d.id_device_group = #{id_device_group}
					AND d.is_virtual = 1
					AND d.`status` = 1
				GROUP BY
					d.id
	</select>


	
	<select id="getGroupDeviceInverter">
		SELECT 
			d.id,
			d.id_project,
			d.id_device_group,
			dg.table_name
		FROM
			device d
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
			LEFT JOIN project p ON p.id = d.id_project 
		WHERE
			p.hash_id = #{hash_id} 
			AND d.`status` = 1 
			AND d.is_virtual = 1
			AND dg.`status` = 1
			AND d.id_device_group IN(18, 19, 20, 21, 22, 28)
			GROUP BY dg.id
	</select>


	<select id="getListDeviceInverter">
		SELECT 
			d.id,
			d.id_project,
			d.id_device_group,
			dg.table_name
		FROM
			device d
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
			LEFT JOIN project p ON p.id = d.id_project 
		WHERE
			p.hash_id = #{hash_id} 
			AND d.`status` = 1 
			AND d.is_virtual = 1
			AND dg.`status` = 1
			AND d.id_device_group IN(18, 19, 20, 21, 22, 28)
			GROUP BY d.id
	</select>

	<select id="getListDeviceEmeter">
		SELECT 
			d.id,
			d.id_project,
			d.id_device_group,
			dg.table_name
		FROM
			device d
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
			LEFT JOIN project p ON p.id = d.id_project 
		WHERE
			p.hash_id = #{hash_id} 
			AND d.`status` = 1 
			AND d.is_virtual = 1
			AND dg.`status` = 1
			AND d.id_device_group IN(15,16,17,29)
			GROUP BY d.id
	</select>



	<select id="dataEnergyByDevice">
		SELECT
			FROM_UNIXTIME( (UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) DIV 300)*300, '%Y-%m-%d %H:%i' ) AS time_format,
			FROM_UNIXTIME( (UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) DIV 300)*300, '%d/%m/%Y %H:%i' ) AS time_full,
			SUM( dv.activePower ) / 1000 AS activePower,
			MAX( dv.activeEnergy ) AS today_activeEnergy,
			FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) AS group_day 
		FROM
			${table_name} dv
			LEFT JOIN device d ON d.id = dv.id_device
		WHERE
			
			FROM_UNIXTIME( dv.time, '%d' ) = DAY ( #{end_date} ) 
			AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) <![CDATA[>=]]> CONCAT( DATE_FORMAT( #{end_date}, '%Y-%m-%d' ), ' 05:00' ) 
			AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) <![CDATA[<=]]> CONCAT( DATE_FORMAT( #{end_date}, '%Y-%m-%d' ), ' 19:00' ) 
			AND d.`status` = 1 
			AND d.is_virtual = 1 
			AND d.id = #{id}
		GROUP BY time_format
	</select>

	
	<select id="getDataEnergyFiveMinutes">
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS today_activeEnergy,
			t.time_full,
			t.group_day
			
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.activePower,
						SUM( m.activeEnergy ) AS activeEnergy,
						m.group_day 
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME( (UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) DIV 300)*300, '%Y-%m-%d %H:%i' ) AS time_format,
							FROM_UNIXTIME( (UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) DIV 300)*300, '%d/%m/%Y %H:%i' ) AS time_full,
							AVG( dv.activePower ) AS activePower,
							MAX( dv.activeEnergy ) AS activeEnergy,
							FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) AS group_day 
						FROM
							${item.table_name} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN project p ON p.id = d.id_project 
						WHERE
							p.hash_id = #{item.hash_id} 
							AND d.id_device_group = #{item.id_device_group}
							AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( #{item.end_date} , '%d/%m/%Y')
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) >= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 05:00' ) 
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) <= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 19:00' ) 
							AND p.`status` = 1 
							AND d.`status` = 1 
							AND d.is_virtual = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>

	

	<select id="getDataEnergyFifteenMinutes">
		SELECT
			t.time,
			t.time_format,
			t.time_full,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS today_activeEnergy,
			t.group_day,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						ROUND(SUM(m.activePower),1) AS activePower,
						SUM( m.activeEnergy ) AS activeEnergy,
						m.group_day 
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME( (UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) DIV 900)*900, '%Y-%m-%d %H:%i' ) AS time_format,
							FLOOR(UNIX_TIMESTAMP(FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							FROM_UNIXTIME( dv.time, '%d/%m/%Y %H:%i' ) AS time_full,
							AVG( IFNULL(dv.activePower, 0) ) AS activePower,
							MAX( dv.activeEnergy ) AS activeEnergy,
							FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) AS group_day 
						FROM
							${item.table_name} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN project p ON p.id = d.id_project 
						WHERE
							p.hash_id = #{item.hash_id} 
							AND d.id_device_group = #{item.id_device_group}
							AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( #{item.end_date} , '%d/%m/%Y')
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) >= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 05:00' ) 
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) <= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 19:00' ) 
							AND p.`status` = 1 
							AND d.`status` = 1 
							AND d.is_virtual = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>


	
	<select id="getDataEnergyHour">
		SELECT
			t.time,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS activeEnergy,
			t.time_format,
			t.time_full,
			t.group_day
			
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.activePower,
						SUM( m.activeEnergy ) AS activeEnergy,
						m.group_day 
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME( dv.time, '%Y-%m-%d %H' ) AS time_format,
							FROM_UNIXTIME( dv.time, '%d/%m/%Y %H:00' ) AS time_full,
							AVG( dv.activePower ) AS activePower,
							ROUND(( MAX( dv.activeEnergy ) - MIN( dv.activeEnergy ) ), 1 ) AS activeEnergy,
							FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) AS group_day 
						FROM
							${item.table_name} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN project p ON p.id = d.id_project 
						WHERE
							p.hash_id = #{item.hash_id} 
							AND d.id_device_group = #{item.id_device_group} 
							AND FROM_UNIXTIME( dv.time, '%d/%m/%Y' ) =  DATE_FORMAT( #{item.end_date} , '%d/%m/%Y')
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) >= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 05:00' ) 
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d %H:%i' ) <= CONCAT( DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' ), ' 19:00' ) 
							AND p.`status` = 1 
							AND d.`status` = 1 
							AND d.is_virtual = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>


	

	<select id="getDataEnergyThisMonth">
		SELECT
			t.time,
			t.time_format,
			t.time_full,
			t.category_time_format,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS activeEnergy 
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.activePower,
						m.category_time_format,
						SUM(m.activeEnergy) AS activeEnergy,

						m.group_day
						FROM
						(
							SELECT
							dv.time,
							FROM_UNIXTIME(dv.time, '%Y-%m-%d') AS time_format,
							FROM_UNIXTIME(dv.time, '%d/%m/%Y') AS time_full,
							FROM_UNIXTIME( dv.time, '%d' ) AS category_time_format,
							SUM(dv.activePower) AS activePower,
							ROUND(
								(
								MAX(dv.activeEnergy) - MIN(dv.activeEnergy)
								),
								1
							) AS activeEnergy,
							FROM_UNIXTIME(dv.time, '%d/%m/%Y') AS group_day
							FROM
							${item.table_name} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN project p ON p.id = d.id_project
							WHERE
							p.hash_id = #{item.hash_id} 
							AND d.id_device_group = #{item.id_device_group} 
							AND FROM_UNIXTIME(dv.time, '%m/%Y') = DATE_FORMAT( #{item.end_date} , '%m/%Y')
							AND p.`status` = 1
							AND d.`status` = 1
							AND d.is_virtual = 1
							AND dv.activeEnergy > 0
							GROUP BY
							time_format, d.id
						) m
						GROUP BY
						m.time_format
					
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>


	
	<select id="getDataEnergy12Month">
		SELECT
			t.time,
			t.time_format,
			t.time_full,
			t.category_time_format,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS activeEnergy 
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[

					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.activePower,
						m.category_time_format,
						SUM(m.activeEnergy) AS activeEnergy,
						m.group_day
						FROM
						(
							SELECT
							dv.time,
							FROM_UNIXTIME(dv.time, '%Y-%m') AS time_format,
							FROM_UNIXTIME(dv.time, '%m/%Y') AS time_full,
							FROM_UNIXTIME( dv.time, '%b' ) AS category_time_format,
							SUM(dv.activePower) AS activePower,
							ROUND(
								(
								MAX(dv.activeEnergy) - MIN(dv.activeEnergy)
								),
								1
							) AS activeEnergy,
							FROM_UNIXTIME(dv.time, '%d/%m/%Y') AS group_day
							FROM
							${item.table_name} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN project p ON p.id = d.id_project
							WHERE
							p.hash_id = #{item.hash_id} 
							AND d.id_device_group = #{item.id_device_group} 
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d' ) >= DATE_FORMAT( #{item.start_date}, '%Y-%m-%d' ) 
							AND FROM_UNIXTIME( dv.time, '%Y-%m-%d' ) <= DATE_FORMAT( #{item.end_date}, '%Y-%m-%d' )
							AND p.`status` = 1
							AND d.`status` = 1
							AND d.is_virtual = 1
							AND dv.activeEnergy > 0
							GROUP BY
							time_format, d.id
						) m
						GROUP BY
						m.time_format

					
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>

	

	<select id="getDataEnergyLifetime">
		SELECT
			t.time,
			t.time_format,
			t.time_full,
			t.category_time_format,
			ROUND(( SUM( t.activePower ) / 1000 ), 1 ) AS activePower,
			ROUND(( SUM( t.activeEnergy ) / 1000 ),1 ) AS activeEnergy 
		FROM
			(
				<foreach collection="groupInverter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						dv.time,
						FROM_UNIXTIME( dv.time, '%Y' ) AS time_format,
						FROM_UNIXTIME( dv.time, '%Y' ) AS time_full,
						FROM_UNIXTIME( dv.time, '%Y' ) AS category_time_format,
						FROM_UNIXTIME( dv.time, '%Y' ) AS time_group_by,
						dv.id_device,
						AVG( dv.activePower ) AS activePower,
						MAX(dv.activeEnergy) - MIN(dv.activeEnergy) AS activeEnergy
					FROM
						${item.table_name} dv
						LEFT JOIN device d ON d.id = dv.id_device
						LEFT JOIN project p ON p.id = d.id_project 
					WHERE
						p.hash_id = #{item.hash_id} 
						AND d.id_device_group = #{item.id_device_group} 
						AND p.`status` = 1 
						AND d.`status` = 1 
						AND d.is_virtual = 1 
						AND dv.activeEnergy > 0
					GROUP BY time_group_by 
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>






	



</mapper>
