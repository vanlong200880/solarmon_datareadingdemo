<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ErrorLevel">

	<select id="getList">
			SELECT
				el.id,
				el.`status`,
				el.thumbnail,
				eld.`name`,
				eld.description 
			FROM
				error_level el
				LEFT JOIN error_level_detail eld ON eld.id_error_level = el.id 
				AND eld.id_language = #{id_language}
			WHERE
				el.`status` IN (0,1)
		
			<if test="name != null">
				AND  (
					eld.`name` LIKE CONCAT('%',#{name},'%')
				)
			</if>

			<if test="id != null">
				AND  (
					el.`id` = #{id}
				)
			</if>
		GROUP BY el.id
		<choose>
			<when test="sort_column != null and order_by != null">
				ORDER BY ${sort_column} ${order_by}
			</when>
			<otherwise>
				ORDER BY el.id DESC
			</otherwise>
		</choose>

	
		<if test="is_paging == 1">
			LIMIT ${offset}, ${limit}
		</if>
	</select>


	<select id="getSize">
		SELECT
			count(el.id) totalRow
		FROM `error_level` AS el
		LEFT JOIN error_level_detail eld ON el.id = eld.id_error_level AND eld.id_language = #{id_language}
		WHERE  el.`status` IN(0,1) 
		<if test="name != null">
				AND  (
					eld.`name` LIKE CONCAT('%',#{name},'%')
				)
			</if>

			<if test="id != null">
				AND  (
					el.`id` = #{id}
				)
			</if>
	</select>

	<insert id="insertErrorLevel" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `error_level`(
			`thumbnail`,
			`status`,
			`created_date`,
			`created_by`
		)VALUES(
			#{thumbnail},
			#{status},
			NOW(),
			#{created_by}
		);
	</insert>




	<insert id="insertErrorLevelDetail" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `error_level_detail` 
		(
			`id_error_level`, 
			`id_language`, 
			`name`,
			`description`
		)
		VALUES
		<foreach collection="dataDetail" item="item" index="index" separator=",">
				(
					#{item.id_error_level}, 
					#{item.id_language},
					#{item.name}, 
					#{item.description}
				)
		</foreach>
	</insert>

	

	<update id="updateStatus">
		UPDATE `error_level` 
			SET status = #{status}
			WHERE id = #{id}
	</update>

	<select id="getDetail">
		SELECT
			p.`id`,
			p.`status`,
			p.thumbnail
		FROM `error_level` p
		WHERE p.id = #{id};

		SELECT
			pd.id_error_level,
			pd.`id_language`,
			pd.`name`,
			pd.`description`,
			l.iso_code,
			l.is_default
		FROM error_level_detail pd
		LEFT JOIN `language` l ON l.id = pd.id_language
		WHERE pd.id_error_level = #{id} GROUP BY l.id ORDER BY l.is_default DESC;
	</select>


	<delete id="deleteErrorLevelDetail">
		DELETE FROM `error_level_detail`
		WHERE id_error_level = #{id}
	</delete>

	

	<update id="updateErrorLevel">
		UPDATE `error_level`
		SET
			thumbnail = #{thumbnail},
			status = #{status},
			updated_date = NOW(),
			updated_by = #{updated_by}
		WHERE id = #{id}
	</update>


	<update id="delete">
		UPDATE `error_level`
		SET
			status = #{status},
			updated_date = NOW(),
			updated_by = #{updated_by}
		WHERE
			id = #{id}
	</update>


	<select id="getDropDownList">
		SELECT
			p.id,
			pd.`name`,
			pd.`name` AS label,
			p.id AS `value`
		FROM
			`error_level` AS p
			LEFT JOIN error_level_detail pd ON pd.id_error_level = p.id 
		WHERE pd.id_language = #{id_language} AND p.`status` = 1
		ORDER BY
			p.`id` ASC
	</select>

</mapper>
