# variables used in the build
variables:
  checkout: afd6a78896957a4e5f6db912263037cbcb93be51
  packaging_tag: 0.12.1.4-2
  iteration: '2'
  pre_release: true
  draft: false

# package builds will always be manually triggered
trigger: none

jobs:
- job: 'buster_amd64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) buster-amd64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.deb
      addChangeLog: false
- job: 'stretch_amd64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) stretch-amd64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.deb
      addChangeLog: false
- job: 'bionic_amd64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) bionic-amd64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.deb
      addChangeLog: false
- job: 'xenial_amd64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) xenial-amd64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.deb
      addChangeLog: false
- job: 'centos8_x86_64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) centos8-x86_64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.rpm
      addChangeLog: false
- job: 'centos7_x86_64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) centos7-x86_64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.rpm
      addChangeLog: false
- job: 'centos6_x86_64'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      git clone --recurse-submodules https://github.com/wkhtmltopdf/wkhtmltopdf.git
      cd wkhtmltopdf && git checkout $(checkout) && git submodule update
    displayName: 'clone wkhtmltopdf'
  - script: python build package-docker --iteration $(iteration) centos6-x86_64 wkhtmltopdf
    displayName: 'build package'
  - task: GithubRelease@0
    displayName: 'upload package'
    inputs:
      gitHubConnection: github_ashkulz
      repositoryName: wkhtmltopdf/packaging
      action: edit
      target: '$(Build.SourceVersion)'
      tagSource: manual
      tag: '$(packaging_tag)'
      isDraft: '$(draft)'
      isPreRelease: '$(pre_release)'
      assetUploadMode: replace
      assets: targets/*.rpm
      addChangeLog: false
